---

- name: Adjust pkg config
  lineinfile:
    dest: '/etc/pkg/FreeBSD.conf'
    state: present
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - {regexp: '^\s+url:', line: '  url: "pkg+http://pkg.FreeBSD.org/${ABI}/latest",'}

- name: Install OS specific base packages
  ansible.builtin.package:
    name: '{{ item }}'
    state: latest
  with_items:
    - vim

- name: configure rc.conf
  community.general.sysrc:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
    - {name: "hostname", value: "{{ hostname }}"}
    - {name: "clear_tmp_enable", value: "YES"}
    - {name: "dumpdev", value: "AUTO"}
    - {name: "sendmail_enable", value: "NONE"}
    - {name: "firewall_enable", value: "YES"}
    - {name: "firewall_logging", value: "YES"}
    - {name: "firewall_type", value: "open"}
      #- {name: "telegraf_enable", value: "YES"}

- name: configure rc.conf - server
  community.general.sysrc:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
    - {name: "syslogd_flags", value: "-ss"}
    - {name: "accounting_enable", value: "YES"}
  when: is_jail is not defined

- name: restart syslogd
  service:
    name: syslogd
    state: restarted
  when: is_jail is not defined

- name: stop sendmail
  service:
    name: sendmail
    state: stopped

- name: configure boot loader.conf
  lineinfile:
    dest: '/boot/loader.conf'
    state: present
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
  - { regexp: '^autoboot_delay', line: 'autoboot_delay="3"' }
  when: is_jail is not defined

- name: create ansible user
  user:
    name: "{{ host_sshd_user }}"
    state: present
    groups: wheel
    append: true
    create_home: true
    shell: /bin/sh

- name: Add sudo rules for ssh user
  template:
    src: 'sudoers.user.j2'
    dest: '/usr/local/etc/sudoers.d/{{ host_sshd_user }}'
    validate: 'visudo -cf %s'

# ntp set to local timezone
- name: Set timezone to " {{ timezone }} "
  ansible.builtin.command: "tzsetup {{ timezone }}"
    


# for restarting the crond jobs, try : /etc/init.d/crond restart
- name: Restart crond services
  command: "/etc/rc.d/cron restart"
